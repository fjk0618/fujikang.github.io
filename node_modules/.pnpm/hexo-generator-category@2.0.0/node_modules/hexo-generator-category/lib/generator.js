'use strict';

const pagination = require('hexo-pagination');

module.exports = function(locals) {
  const config = this.config;
  const perPage = config.category_generator.per_page;
  const paginationDir = config.pagination_dir || 'page';
  const orderBy = config.category_generator.order_by || '-date';
  const categories = locals.categories;
  let categoryDir;
  const pages = locals.categories.reduce((result, category) => {
    if (!category.length) return result;

    const posts = category.posts.sort(orderBy);
    const data = pagination(category.path, posts, {
      perPage,
      layout: ['category', 'archive', 'index'],
      format: paginationDir + '/%d/',
      data: {
        category: category.name
      }
    });

    return result.concat(data);
  }, []);

  // generate tag index page, usually /tags/index.html
  if (config.category_generator.enable_index_page) {
    categoryDir = config.category_dir;
    if (categoryDir[categoryDir.length - 1] !== '/') {
      categoryDir += '/';
    }

    pages.push({
      path: categoryDir,
      layout: ['category-index', 'category', 'archive', 'index'],
      posts: locals.posts,
      data: {
        base: categoryDir,
        total: 1,
        current: 1,
        current_url: categoryDir,
        posts: locals.posts,
        prev: 0,
        prev_link: '',
        next: 0,
        next_link: '',
        categories: categories
      }
    });
  }

  return pages;
  
};


